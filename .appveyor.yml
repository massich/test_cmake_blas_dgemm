shallow_clone: true

platform:
  - x86
  # - x64

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  # - ps: nuget install OpenBLAS -o C:\
  # - ps: |
  #     if (![IO.File]::Exists("C:\cmake-3.10.1-win32-x86\bin\cmake.exe")) {
  #       Start-FileDownload 'https://cmake.org/files/v3.10/cmake-3.10.1-win32-x86.zip'
  #       7z x -y cmake-3.10.1-win32-x86.zip -oC:\
  #     }
  #     $env:PATH="C:\cmake-3.10.1-win32-x86\bin;$env:PATH"
  - set PATH=C:\msys64\usr\bin;%PATH%
  # - cd c:\projects
  # - ps: Start-FileDownload "https://downloads.sourceforge.net/project/openblas/v0.2.20/OpenBLAS%200.2.20%20version.zip" -FileName OpenBLAS.zip
  # - unzip -qq OpenBLAS.zip
  # - cd xianyi-OpenBLAS-6d2da63\
  - PATH
  - which make
  - bash -lc "pwd"
  - bash -lc "ls /"
  - bash -lc "cd /c/projects && ls"
  - bash -lc "which make"
  - bash -lc "make -s "
  - bash -lc "make PREFIX=/c/openblas/ install"
  


    

before_build:

build_script:
  - cd c:\projects\test_cmake_blas_dgemm\
  - gcc -static -o test_cblas_open test_cblas_dgemm.c -I c:\openblas\include -L c:\openblas\bin\win32 -lopenblas -lpthread

test_script:
  - cd c:\projects\test_cmake_blas_dgemm\
  - .\test_cblas_open.exe

deploy: off

on_failure:

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
